/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package applicationbanqueclient;

import ejb.SessionBeanBanqueRemote;
import entites.Client;
import entites.Compte;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.jms.Message;
import javax.jms.MessageConsumer;
import javax.jms.MessageListener;
import javax.jms.MessageProducer;
import javax.jms.Session;
import javax.jms.TextMessage;
import javax.jms.Topic;
import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Thibault
 */
public class GUIEmploye extends javax.swing.JFrame implements MessageListener
{

    
    private Topic topic=null;
    private Session session=null;
    private MessageProducer producer = null;
    private MessageConsumer consumer = null;
    
    private List<Client> listClients = null;
    /**
     * Creates new form GUIEmploye
     */
    public GUIEmploye(Topic t,Session s)
    {
        initComponents();
        topic=t;
        session=s;
        
        listClients = lookupSessionBeanBanqueRemote().GetClients();
        DefaultListModel dlm = new DefaultListModel();
        
        for(Client c : listClients)
            dlm.addElement(c);
        
        LIListeClient.setModel(dlm);
        
        try
        {
            consumer=session.createConsumer(topic);
            consumer.setMessageListener(this);
        } catch (Exception e)
        {
            System.err.println(e);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jScrollPane1 = new javax.swing.JScrollPane();
        LIListeClient = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        TFMontant = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        TFTaux = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        TFDuree = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        TFSalaire = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        TFCharge = new javax.swing.JTextField();
        BTDemande = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        LBRetour = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(LIListeClient);

        jLabel1.setText("Clients : ");

        jLabel2.setText("Montant : ");

        jLabel3.setText("Taux : ");

        jLabel4.setText("durée : ");

        jLabel5.setText("Salaire : ");

        jLabel6.setText("Charge de crédit : ");

        BTDemande.setText("Demande de crédit");
        BTDemande.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                BTDemandeActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Demande de crédit : ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(TFMontant, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                                    .addComponent(TFTaux)
                                    .addComponent(TFDuree)
                                    .addComponent(TFSalaire)
                                    .addComponent(BTDemande)
                                    .addComponent(TFCharge)))
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(LBRetour, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(TFMontant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(TFTaux, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(TFDuree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(TFSalaire, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(TFCharge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addComponent(BTDemande, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(LBRetour, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BTDemandeActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BTDemandeActionPerformed
    {//GEN-HEADEREND:event_BTDemandeActionPerformed
        LBRetour.setText("");

        //vérification montant
        float montant;
        try
        {
            montant=Float.parseFloat(TFMontant.getText());
        } catch (Exception e)
        {
            LBRetour.setText("Vérifier la valeur du montant");
            return;
        }
        if(montant<=0)
        {
            LBRetour.setText("La valeur du montant doit etre strictement positive");
            return;
        }
        
        
        //verification taux
        float taux;
        try
        {
            taux=Float.parseFloat(TFTaux.getText());
        } catch (Exception e)
        {
            LBRetour.setText("Vérifier la valeur du taux");
            return;
        }
        if(taux<=0)
        {
            LBRetour.setText("La valeur du taux doit etre strictement positive");
            return;
        }
        
        
        //vérification durée
        int duree;
        try
        {
            duree=Integer.parseInt(TFDuree.getText());
        } catch (Exception e)
        {
            LBRetour.setText("Vérifier la valeur de la durée");
            return;
        }
        if(duree<=0)
        {
            LBRetour.setText("La valeur de la durée doit etre strictement positive");
            return;
        }
        
        
        //vérification du salaire
        float salaire;
        try
        {
            salaire=Float.parseFloat(TFSalaire.getText());
        } catch (Exception e)
        {
            LBRetour.setText("Vérifier la valeur du salaire");
            return;
        }
        if(salaire<=0)
        {
            LBRetour.setText("La valeur du salaire doit etre strictement positive");
            return;
        }
        
        
        //vérification de la charge de crédit
        float charge;
        try
        {
            charge=Float.parseFloat(TFCharge.getText());
        } catch (Exception e)
        {
            LBRetour.setText("Vérifier la valeur de la charge");
            return;
        }
        if(charge<0)
        {
            LBRetour.setText("La valeur de la charge doit etre positive");
            return;
        }
        
        
        //vérification qu'un client est séléctionné
        Client cli = (Client)LIListeClient.getSelectedValue();
        if(cli==null)
        {
            LBRetour.setText("Selectionner un client");
            return;
        }
        
        
        //a partir d'ici toutes les données sont cohérantes : 
        int ret = lookupSessionBeanBanqueRemote().DemandeCredit(montant, taux, duree, salaire, charge, cli);
        
        switch(ret)
        {
            case 1:
                LBRetour.setText("Crédit accepté.");
                TFCharge.setText("");
                TFDuree.setText("");
                TFMontant.setText("");
                TFSalaire.setText("");
                TFTaux.setText("");
                LIListeClient.clearSelection();
                break;
            case 0:
                LBRetour.setText("crédit en attente de validation");
                TFCharge.setText("");
                TFDuree.setText("");
                TFMontant.setText("");
                TFSalaire.setText("");
                TFTaux.setText("");
                LIListeClient.clearSelection();
                break;
            case -1:
                LBRetour.setText("erreur lors de la demande de crédit");
                break;
            default:
                LBRetour.setText("code de retour inconnu lors de la demande de crédit");
        }
        
    }//GEN-LAST:event_BTDemandeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTDemande;
    private javax.swing.JLabel LBRetour;
    private javax.swing.JList LIListeClient;
    private javax.swing.JTextField TFCharge;
    private javax.swing.JTextField TFDuree;
    private javax.swing.JTextField TFMontant;
    private javax.swing.JTextField TFSalaire;
    private javax.swing.JTextField TFTaux;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private SessionBeanBanqueRemote lookupSessionBeanBanqueRemote()
    {
        try
        {
            Context c = new InitialContext();
            return (SessionBeanBanqueRemote) c.lookup("java:comp/env/SessionBeanBanque");
        } catch (NamingException ne)
        {
            Logger.getLogger(getClass().getName()).log(Level.SEVERE, "exception caught", ne);
            throw new RuntimeException(ne);
        }
    }

    @Override
    public void onMessage(Message message)
    {
        TextMessage tm = (TextMessage)message;
        try
        {
            if(tm.getStringProperty("type").equals("InfoEmp") && tm.getStringProperty("login").equals(lookupSessionBeanBanqueRemote().getEmployeLogin()))
            {
                if(tm.getBooleanProperty("valide"))
                    JOptionPane.showMessageDialog(this,"le credit de " + tm.getStringProperty("nomClient") + "a été accepté");
                else
                    JOptionPane.showMessageDialog(this,"le credit de " + tm.getStringProperty("nomClient") + "a été refusé");
                
            }
        } catch (Exception e)
        {
        }
    }
    
}
